

@model SubmitClaimViewModel
@{
    ViewData["Title"] = "Submit New Claim";
}

<div class="main-content-card">
    <div class="text-center mb-4">
        <h2 class="mb-1">@ViewData["Title"]</h2>
        <p class="text-muted">Please fill out the details for each item you wish to claim for reimbursement.</p>
    </div>
    <hr />

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <form asp-action="Submit" method="post">
                <div asp-validation-summary="All" class="text-danger mb-3" role="alert"></div>

                <h4>Claim Items</h4>

                <div id="claimItemsContainer">
                    @for (int i = 0; i < Model.Items.Count; i++)
                    {
                    <div class="row g-2 mb-2 align-items-center claim-item-row">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input asp-for="Items[i].ItemName" class="form-control" placeholder="Item Name" />
                                <label asp-for="Items[i].ItemName"></label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <input asp-for="Items[i].Cost" class="form-control" placeholder="Cost" type="number" step="0.01" />
                                <label asp-for="Items[i].Cost"></label>
                            </div>
                        </div>
                        <div class="col-md-2 text-center">
                            @if (i > 0) // Don't show remove button for the first item
                                {
                            <button type="button" class="btn btn-outline-danger remove-item-btn">Remove</button>
                                }
                        </div>
                    </div>
                    }
                </div>

                <div class="mt-3">
                    <button type="button" id="addItem" class="btn btn-secondary">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg me-1" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" /></svg>
                        Add Another Item
                    </button>
                </div>
                <hr />

                <div class="form-group d-flex justify-content-end">
                    <a asp-controller="Home" asp-action="Index" class="btn btn-light me-2">Cancel</a>
                    <input type="submit" value="Submit Claim" class="btn btn-primary btn-lg" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateItemIndices() {
            var container = document.getElementById("claimItemsContainer");
            var rows = container.getElementsByClassName("claim-item-row");
            for (var i = 0; i < rows.length; i++) {
                var inputs = rows[i].getElementsByTagName("input");
                for (var j = 0; j < inputs.length; j++) {
                    if (inputs[j].name.includes("ItemName")) {
                        inputs[j].name = `Items[${i}].ItemName`;
                    }
                    if (inputs[j].name.includes("Cost")) {
                        inputs[j].name = `Items[${i}].Cost`;
                    }
                }
            }
        }

        document.getElementById("addItem").addEventListener("click", function () {
            var container = document.getElementById("claimItemsContainer");
            var index = container.getElementsByClassName("claim-item-row").length;
            var newRowHtml = `
                    <div class="row g-2 mb-2 align-items-center claim-item-row">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input name="Items[${index}].ItemName" class="form-control" placeholder="Item Name" />
                                <label for="Items_${index}__ItemName">Item Name</label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating">
                                <input name="Items[${index}].Cost" class="form-control" placeholder="Cost" type="number" step="0.01" />
                                 <label for="Items_${index}__Cost">Cost</label>
                            </div>
                        </div>
                        <div class="col-md-2 text-center">
                            <button type="button" class="btn btn-outline-danger remove-item-btn">Remove</button>
                        </div>
                    </div>`;
            container.insertAdjacentHTML('beforeend', newRowHtml);
        });

        // Event delegation for remove buttons
        document.getElementById("claimItemsContainer").addEventListener("click", function (e) {
            if (e.target && e.target.classList.contains("remove-item-btn")) {
                e.target.closest(".claim-item-row").remove();
                updateItemIndices();
            }
        });
    </script>
}

